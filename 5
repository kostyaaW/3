#include <iostream>  
#include <algorithm> 

using namespace std; // Використання стандартного простору імен для уникнення додавання std:: перед стандартними функціями

// Функція для виконання інтерполяційного пошуку в масиві
int interpolationSearch(int arr[], int n, int x) {
    int low = 0;  // Ініціалізація нижньої межі діапазону пошуку
    int high = n - 1;  // Ініціалізація верхньої межі діапазону пошуку
    
    // Продовження пошуку, поки значення x знаходиться в поточному діапазоні пошуку
    while (low <= high && x >= arr[low] && x <= arr[high]) {
        // Якщо діапазон пошуку звузився до одного елемента
        if (low == high) {
            // Перевірка, чи є цей елемент цільовим значенням
            if (arr[low] == x)
                return low;  // Повернення індексу, якщо значення знайдено
            return -1;  // Повернення -1, якщо значення не знайдено
        }
        
        // Обчислення приблизної позиції цільового значення за допомогою формули інтерполяції
        int pos = low + ((double)(high - low) / (arr[high] - arr[low])) * (x - arr[low]);
        
        // Перевірка, чи є цільове значення на обчисленій позиції
        if (arr[pos] == x)
            return pos;  // Повернення індексу, якщо значення знайдено
        
        // Якщо цільове значення більше, ніж значення на обчисленій позиції
        if (arr[pos] < x)
            low = pos + 1;  // Звуження діапазону пошуку до верхнього підмасиву
        else
            high = pos - 1;  // Звуження діапазону пошуку до нижнього підмасиву
    }
    return -1;  // Повернення -1, якщо значення не знайдено в масиві
}

int main() {
    srand(time(0));  // Ініціалізація генератора випадкових чисел поточним часом

    int choice;
    cout << "Введіть кількість елементів у масиві (1 для динамічного масиву, 2 для статичного масиву): ";
    cin >> choice;  // Отримання вибору користувача щодо типу масиву

    // Якщо користувач обирає динамічний масив
    if (choice == 1) {
        int n;
        cout << "Введіть кількість елементів у динамічному масиві: ";
        cin >> n;  // Отримання кількості елементів для динамічного масиву

        int *arr = new int[n];  
        cout << "Введіть " << n << " елементів для масиву:" << endl;
        for (int i = 0; i < n; ++i) {
            cin >> arr[i];  // Зчитування елементів у масив
        }

        // Відображення елементів масиву
        cout << "Масив: ";
        for (int i = 0; i < n; ++i) {
            cout << arr[i] << " ";
        }
        cout << endl;

        int value;
        cout << "Введіть значення для пошуку: ";
        cin >> value;  // Отримання значення для пошуку

        // Виконання інтерполяційного пошуку у динамічному масиві
        int index = interpolationSearch(arr, n, value);

        // Виведення результату пошуку
        if (index != -1) {
            cout << "Значення " << value << " знайдено на індексі " << index << endl;
        } else {
            cout << "Значення " << value << " не знайдено у масиві" << endl;
        }

        delete[] arr;  // Звільнення пам'яті для динамічного масиву
    }
    // Якщо користувач обирає статичний масив
    else if (choice == 2) {
        const int arrSize = 10;  // Визначення розміру статичного масиву
        int arr[arrSize];  // Оголошення статичного масиву
        cout << "Введіть " << arrSize << " елементів для масиву" << endl;

        for (int i = 0; i < arrSize; ++i) {
            cin >> arr[i];  
        }

        
        sort(arr, arr + arrSize);
        
        // Відображення відсортованого масиву
        cout << "Відсортований масив: ";
        for (int i = 0; i < arrSize; ++i) {
            cout << arr[i] << " ";
        }
        cout << endl;

        int value;
        cout << "Введіть значення для пошуку: ";
        cin >> value;  // Отримання значення для пошуку

        // Виконання інтерполяційного пошуку у статичному масиві
        int index = interpolationSearch(arr, arrSize, value);

        
        if (index != -1) {
            cout << "Значення " << value << " знайдено на індексі " << index << endl;
        } else {
            cout << "Значення " << value << " не знайдено у масиві" << endl;
        }
    }

    return 0;  
}
